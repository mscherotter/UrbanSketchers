<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MySketches" xml:space="preserve">
    <value>My Sketches</value>
  </data>
  <data name="Sketches" xml:space="preserve">
    <value>Sketches</value>
  </data>
  <data name="SketchMap" xml:space="preserve">
    <value>Sketch Map</value>
  </data>
  <data name="UrbanSketchers" xml:space="preserve">
    <value>Urban Sketchers</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="SketchesByFormat" xml:space="preserve">
    <value>{0} Sketches by {1}</value>
    <comment>10 Sketch by Michael Scherotter</comment>
  </data>
  <data name="EditSketch" xml:space="preserve">
    <value>Edit Sketch</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OnlyEditOwnSketches" xml:space="preserve">
    <value>You can only edit sketches that you submitted.</value>
  </data>
  <data name="TitleBySketcher" xml:space="preserve">
    <value>{0} by {1}</value>
    <comment>The Pantheon by Michael Scherotter</comment>
  </data>
  <data name="AddCommentMessage" xml:space="preserve">
    <value>Sketches flagged as inappropriate must have a comment.  {0}</value>
  </data>
  <data name="EnterComment" xml:space="preserve">
    <value>Enter Comment</value>
  </data>
  <data name="InappropraiteSketch" xml:space="preserve">
    <value>Inappropriate Sketch</value>
  </data>
  <data name="InappropriateSketchDescription" xml:space="preserve">
    <value>Inappropraite sketches include:
1. Sketches that are not submitted by the original artist.
2. Sketches that are offensive.</value>
  </data>
  <data name="AboutUrbanSketches" xml:space="preserve">
    <value>About Urban Sketches</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="UploadMessage" xml:space="preserve">
    <value>You are about to upload a picture to the Urban Sketches service at
http://urbansketchers.azurewebsites.net.

Please follow these rules when sharing sketches:
1. The sketches should represent actual places that can be mapped on the Earth.
2. You should only upload pictures of sketches that you created.
3. Offensive or pornographic images are not allowed.
4. Place the pictures with an appropriate location, title, and date created.  Description and address are optional.
5. the Urban Sketches App, Site, or the app's developer, Michael Scherotter do not assume ownership of the images uploaded.  You can remove the sketches at any time from the app.

Press OK to continue uploading the sketch, affirming that you have read this and agree to the terms.</value>
  </data>
  <data name="UploadSketch" xml:space="preserve">
    <value>Upload Sketch</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SignOutQuestion" xml:space="preserve">
    <value>Would you like to sign out of Urban Sketches?  You need to be signed in to upload and comment on sketches.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="RemoveUser" xml:space="preserve">
    <value>Remove User</value>
  </data>
  <data name="RemoveUserQuestion" xml:space="preserve">
    <value>Press OK to remove the current user data from Urban Sketches, including all sketches and ratings.</value>
  </data>
  <data name="AddSketch" xml:space="preserve">
    <value>Add sketch</value>
  </data>
  <data name="DrawSketch" xml:space="preserve">
    <value>Draw sketch</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="AboutUrbanSketchers" xml:space="preserve">
    <value>About Urban Sketches</value>
  </data>
  <data name="CreatedByMichaelScherotter" xml:space="preserve">
    <value>Created by Michael S. Scherotter</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Urban Sketches is an app for people to contribute and explore a growing map of sketches from around the world.</value>
  </data>
  <data name="DeleteUserText" xml:space="preserve">
    <value>Remove user, sketches, and ratings.</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="UrbanSketches" xml:space="preserve">
    <value>Urban Sketches</value>
  </data>
  <data name="XResultsForY" xml:space="preserve">
    <value>{0} results for "{1}"</value>
  </data>
  <data name="PinToStart" xml:space="preserve">
    <value>Pin to start</value>
  </data>
</root>